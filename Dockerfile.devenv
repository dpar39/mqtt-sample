FROM ubuntu:22.04

# System packages that facilitate the build process
RUN apt-get update --fix-missing \
    && DEBIAN_FRONTEND="noninteractive" apt-get -y install \
        libssl-dev \
        git \
        wget \
        curl \
        cmake \
        ccache \
        ninja-build \
        python3 \
        python3-pip \
        python-is-python3 \
        lsb-release \
        protobuf-compiler \
        software-properties-common \
        bash-completion \
        unzip \
        clang-format-14 \
        clangd \
        ccache \
        sudo \
    && apt-get clean

RUN ln -sf /usr/bin/clang-format-14 /usr/bin/clang-format

ENV PAHO_MQTT_VERSION=1.3.11
RUN wget https://github.com/eclipse/paho.mqtt.c/archive/refs/tags/v${PAHO_MQTT_VERSION}.tar.gz -O - |tar -zx \
    && cmake -G Ninja -Bbuild_dir \
        -DPAHO_WITH_SSL=TRUE  \
        -DPAHO_BUILD_STATIC=TRUE  \
        -DPAHO_BUILD_SHARED=FALSE  \
        -DPAHO_ENABLE_TESTING=FALSE \
        paho.mqtt.c-${PAHO_MQTT_VERSION} \
    && cmake --build build_dir \
    && cmake --build build_dir --target install \
    && rm -rf build_dir \
    && rm -rf paho.mqtt.c-${PAHO_MQTT_VERSION}

##################################################
# Create the playpen user
##################################################
ARG USER_NAME
ARG USER_UID
ARG USER_GID

ENV HOME=/home/$USER_NAME
RUN groupadd --gid $USER_GID $USER_NAME; exit 0
RUN useradd --uid $USER_UID --gid $USER_GID -m $USER_NAME \
    && echo $USER_NAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USER_NAME \
    && chmod 0440 /etc/sudoers.d/$USER_NAME \
    && chown -R $USER_NAME $HOME

USER ${USER_NAME}

# VSCode preparations
RUN mkdir -p $HOME/.vscode-server/extensions

# Shell preparations
RUN echo "[[ -f /workspace/.devcontainer/.bashrc ]] && source /workspace/.devcontainer/.bashrc" >> $HOME/.bashrc

ENV CCACHE_DIR /workspace/.ccache
ENV CCACHE_SIZE 20G